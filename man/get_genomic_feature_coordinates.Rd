% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/HandleFeatures.R
\name{get_genomic_feature_coordinates}
\alias{get_genomic_feature_coordinates}
\title{Extract genomic features from TxDb object}
\usage{
get_genomic_feature_coordinates(
  txdb,
  featureName,
  featureSource = NULL,
  export = FALSE,
  longest = FALSE,
  protein_coding = FALSE
)
}
\arguments{
\item{txdb}{a TxDb object defined in the GenomicFeatures package}

\item{featureName}{one of the gene feature in c("utr3", "utr5", "cds", "intron", "exon", "transcript", "gene")}

\item{featureSource}{the name of the gtf/gff3 file or the online database from which txdb is derived, used as name of output file}

\item{export}{logical, indicating if the bed file should be produced}

\item{longest}{logical, indicating whether the output should be limited to the longest transcript of each gene}

\item{protein_coding}{logical, indicating whether to limit to protein_coding genes}
}
\value{
a list of three objects, the first is a GRanges object, the second is a GRangesList object, the last is the output file name
}
\description{
Extract genomic coordinates and make bed and bed 12 files from a TxDb object for a variety of annotated genomic features.
The output of this function is a list. The first element of the list is a GRanges object that provide the start and end information.
The second element is a GRangesList providing information for subcomponents. For "utr3", "utr5", "cds" and "transcript", the returned GRanges
object has only one range for each feature, denoting the start and end of the feature in one transcript, and the range may contain introns;
the returned GrangesList object is a list of exons, belonging to one transcript and indexed on transcript id. The third element is a bed12 file.
For "exon", "intron" and "gene", the GRanges object denotes ranges of individual exon or intron, and the GrangesList object is a list of exons or
introns belonging to one transcript and indexed on transcript id. The third element is a bed6 file.
}
\examples{
txdb <- AnnotationDbi::loadDb(system.file("data", "txdb_chr19.sql", package="GenomicPlotData"))
output <- get_genomic_feature_coordinates(txdb, featureName="cds", featureSource="gencode",
export=FALSE, longest=TRUE, protein_coding=TRUE)
}
\author{
Shuye Pu
}
